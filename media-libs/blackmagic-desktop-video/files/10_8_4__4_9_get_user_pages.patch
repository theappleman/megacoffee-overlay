Patch provided by Techwolf overlay, imported to Megacoffee overlay on 19 Feb 2017

This inofficial patch attempts to add compatibility with Linux kernel 4.9 (otherwise only kernels up to 4.7, maybe 4.8 will work).
Applying this patch may void warranty but at least temporarily cancels support with Blackmagic, apply at your own risk!
Staying with an older, officially supported kernel is recommended instead of applying this patch.

Source: https://raw.githubusercontent.com/Techwolf/techwolf-overlay/master/media-libs/blackmagic-desktop-video/files/get_user_pages.patch


diff -up ./usr/src/blackmagic-10.8.4a4/blackmagic_lib.c.org ./usr/src/blackmagic-10.8.4a4/blackmagic_lib.c
--- ./usr/src/blackmagic-10.8.4a4/blackmagic_lib.c.org	2016-11-15 23:16:31.000000000 -0500
+++ ./usr/src/blackmagic-10.8.4a4/blackmagic_lib.c	2017-01-29 20:06:15.874068829 -0500
@@ -662,7 +662,12 @@ dl_get_user_pages(void *task_ptr, void *
 		write = 0;
 	
 	down_read(&current_task->mm->mmap_sem);
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 6, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 9, 0)
+      if (current_task == current)
+         ret = get_user_pages((unsigned long)ptr & PAGE_MASK, *nr_pages, write ? FOLL_WRITE : 0 , pages, NULL);
+      else
+         ret = get_user_pages_remote(current_task, current_task->mm, (unsigned long)ptr & PAGE_MASK, *nr_pages, write ? FOLL_WRITE : 0, pages, NULL);
+#elif LINUX_VERSION_CODE >= KERNEL_VERSION(4, 6, 0)
 		if (current_task == current)
 			ret = get_user_pages((unsigned long)ptr & PAGE_MASK, *nr_pages, write, 0, pages, NULL);
 		else
diff -up ./usr/src/blackmagic-io-10.8.4a4/bm_mm.c.org ./usr/src/blackmagic-io-10.8.4a4/bm_mm.c
--- ./usr/src/blackmagic-io-10.8.4a4/bm_mm.c.org	2016-11-15 23:16:31.000000000 -0500
+++ ./usr/src/blackmagic-io-10.8.4a4/bm_mm.c	2017-01-29 20:07:30.805515521 -0500
@@ -103,7 +103,12 @@ static bool bm_get_user_pages(bm_user_me
 		return false;
 
 	down_read(&task->mm->mmap_sem);
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 6, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 9, 0)
+      if (task == current)
+         ret = get_user_pages((unsigned long)address & PAGE_MASK, umem->length, write ? FOLL_WRITE : 0, umem->pages, NULL);
+      else
+         ret = get_user_pages_remote(task, task->mm, (unsigned long)address & PAGE_MASK, umem->length, write ? FOLL_WRITE : 0, umem->pages, NULL);
+#elif LINUX_VERSION_CODE >= KERNEL_VERSION(4, 6, 0)
 		if (task == current)
 			ret = get_user_pages((unsigned long)address & PAGE_MASK, umem->length, write, 0, umem->pages, NULL);
 		else
